library(tidyverse)

pgsois_data <- read.csv("C:\\Users\\jpgk\\Downloads\\lataus.csv", sep=",")

pgsois_data$gender <- factor(pgsois_data$gender, labels=c("Ei vastausta", "Mies", "Muu", "Nainen"))
pgsois_data$age <- as.numeric(pgsois_data$age)
pgsois_data$income <- as.factor(pgsois_data$income)
pgsois_data$education <- as.factor(pgsois_data$education)


#pgsois_data$gender[which(pgsois_data$gender=="")] <- NA


pgsois_data %>% 
  group_by(gender) %>%
  mutate(gender = factor(gender)) %>%
  filter(gender!="") %>%
  summarize(keskiarvo = mean(total))


pgsois_data %>% 
  group_by(gender) %>%
  mutate(gender = factor(gender)) %>%
  filter(gender!="") %>%
  summarize(keskiarvo = mean(total))


malli <- lm(total ~ gender+education+income+age, data=pgsois_data)
summary(malli)
anova(malli)



pgsois_data %>% 
  gather(key, value, PG_SOIS_1:PG_SOIS_6) %>% 
  ggplot(aes(value)) + 
  geom_histogram(bins=4, color="black", fill="lightblue") + #aes(y=..density..) for proportions
  facet_wrap("key") + 
  theme_bw() + 
  geom_text(stat="count", aes(label=..count..), size=3, vjust=-.65) + 
  coord_cartesian(ylim=c(0,160))


pgsois_data %>% 
  gather(key, value, PG_SOIS_1:PG_SOIS_6) %>%
  ggplot(aes(key, value)) +
  geom_line(aes(group=id)) +
  theme_bw()


pgsois_data %>% 
  gather(key, value, PG_SOIS_1:PG_SOIS_6) %>%
  dplyr::mutate(key = fct_rev(factor(key, labels=c("Itemi 1\n(Taloudelliset vaikeudet)", "Itemi 2\n(Suru, ahdistus, stressi, viha)", 
                                           "Itemi 3\n(Ihmissuhde)", "Itemi 4\n(Sosiaalinen elämä)", 
                                           "Itemi 5\n(Työ- tai opiskelukyky)", "Itemi 6\n(Terveydentila)")))) %>%
  filter(gender != "Muu") %>%
  #filter(gender == "Mies" | gender == "Nainen") %>%
  group_by(key, gender) %>%
  dplyr::summarize(mean_value = mean(value, na.rm=T),
                   se_value = sd(value, na.rm=T) / sqrt(n()),
                   lower = mean_value - qt(.975, n())*se_value,
                   upper = mean_value + qt(.975, n())*se_value) %>%
  ggplot(aes(key, mean_value, color=gender)) +
  geom_point(position=position_dodge(.25), size=2, alpha=.5) +
  geom_errorbar(aes(ymin=lower, ymax=upper), width=.2, position=position_dodge(.25)) +
  geom_line(aes(group=gender), position=position_dodge(.25)) +
  theme_bw(base_size=14) +
  theme(legend.position="top") +
  labs(x = NULL, y = NULL, color=NULL) +
  coord_flip(ylim=c(0,3)) +
  scale_y_continuous(breaks=c(0:3), labels=c("Ei lainkaan\n(0)", "1", "2", "Usein\n(3)")) +
  scale_color_manual(values=c("darkgrey", "blue", "red"))
  
  # geom_path(data=pgsois_data %>% gather(key, value, PG_SOIS_1:PG_SOIS_6) %>%
  #             dplyr::mutate(key = fct_rev(factor(key, labels=c("Itemi 1\n(Taloudelliset vaikeudet)", "Itemi 2\n(Suru, ahdistus, stressi, viha)", 
  #                                                              "Itemi 3\n(Ihmissuhde)", "Itemi 4\n(Sosiaalinen elämä)", 
  #                                                              "Itemi 5\n(Työ- tai opiskelukyky)", "Itemi 6\n(Terveydentila)")))),
  #           aes(group=id, x = key, y = value), inherit.aes=F, alpha=.05, position=position_jitter(width=.15, height=.35, seed=1)) +
  # geom_point(data=pgsois_data %>% gather(key, value, PG_SOIS_1:PG_SOIS_6) %>%
  #             dplyr::mutate(key = fct_rev(factor(key, labels=c("Itemi 1\n(Taloudelliset vaikeudet)", "Itemi 2\n(Suru, ahdistus, stressi, viha)", 
  #                                                              "Itemi 3\n(Ihmissuhde)", "Itemi 4\n(Sosiaalinen elämä)", 
  #                                                              "Itemi 5\n(Työ- tai opiskelukyky)", "Itemi 6\n(Terveydentila)")))),
  #           aes(group=id, x = key, y = value), inherit.aes=F, alpha=.05, position=position_jitter(width=.15, height=.35, seed=1))
  

  
  
  #Kesken
  
  # keskiarvo <- pgsois_data %>%
  #   dplyr::select(total, gender, PG_SOIS_1:PG_SOIS_6) %>%
  #   group_by(gender) %>%
  #   dplyr::summarize(mean_total = mean(total/6, na.rm=T),
  #                    se_total = sd(total/6, na.rm=T) / sqrt(n()),
  #                    lower_total = mean_total - qt(.975, n()) * se_total,
  #                    upper_total = mean_total + qt(.975, n()) * se_total)

