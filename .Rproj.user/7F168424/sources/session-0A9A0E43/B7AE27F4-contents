---
title: "Poker variance simulator"
output:
  html_document:
    code_folding: hide
  pdf_document:
date: "2023-02-13"
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(include = TRUE, echo = TRUE, message = FALSE, warning = FALSE)
```

```{r, message=FALSE}
library(tidyverse)
library(gganimate)
library(transformr)
```
This simulator illustrates the interplay of skill and chance in poker. In the simulator, players’ levels of skill are defined as their win rate, which is the average amount of profit (or loss) over 100 poker hands played. The standard deviation (SD) of a player’s win rate can be more than 20 times higher than the win rate itself. By assuming the players have somewhat low win rates (e.g., 1.5 big blinds per 100 hands with a SD of 75), we observe the situation below over the course of 30,000 hands. Outcome variability is clearly a highly significant factor masking a player's "true" skill as defined by the expected long-run winnings (dashed line). This means that while poker differs from games of pure chance (e.g. roulette) or games of skill and chance where long-term profit is unattainable (e.g. blackjack), outcome variability still makes it challenging to empirically estimate the actually skill level of individual players.
```{r}
variance_simulator <- function(hands, winrate, SD, players) {
  
  simulations = data.frame(nrow = 0)
  cumEV = cumsum(rep(winrate, hands))
  cumSD = sqrt(cumsum(rep(SD^2, hands))) #first convert to variance, then convert the sum back to SD
  lower <- qnorm(0.025, cumEV, cumSD)
  upper <- qnorm(0.975, cumEV, cumSD)
  confidence <- data.frame(cbind(lower, upper))
  confidence$ID <- seq.int(nrow(confidence))
  
  for (i in 1:players) {
    test <- rnorm(hands, mean=winrate, sd=SD)
    test <- data.frame(run = test)
    names(test)[1] <- paste("Player ",i,sep="")
    simulations <- cbind(cumsum(test), simulations)
    simulations$nrow <- NULL
    
  }
  
  simulations$ID <- seq.int(nrow(simulations))
  simulations.long <- simulations %>% 
    gather(key, value, -ID) %>%
    dplyr::mutate(profit = factor(ifelse(value > cumEV, 1, 0)))
  
  plot <- ggplot(data=simulations.long, aes(ID, value, group=key)) + #group here required for complex animation
    geom_line(aes(colour = key)) +
    geom_line(data = confidence, aes(x = ID, y = lower), linetype="dashed", color="black", size=0.5, inherit.aes=F) +
    geom_line(data = confidence, aes(x = ID, y = upper), linetype="dashed", color="black", size=0.5, inherit.aes=F) +
    geom_abline(intercept = 0, slope = winrate, linetype="dashed", size=1) +
    xlab("Hands played") + ylab("Big blinds won") +
    scale_x_continuous(labels=function(x)x*100) +
    theme_bw(base_size=14) +
    guides(color="none")
  
  return(plot)
}

variance_simulator(300, 1.5, 75, 30)
```

In the animation below, we're simulating 50,000 poker hands for three equally skilled players who are all expected to win 1.5 big blinds per 100 hands (with an SD of 75). As can be seen, the individual paths to profit (or loss) over the course of 50,000 hands are typically very different for these three players, despite them being mathematically equally skilled.

The dashed curved lines represent the 2.5% and 97.5% percentiles (the 95% confidence interval) of the distribution of individual players' win rate at any given point in time.

```{r}
animation <- variance_simulator(500, 1.5, 75, 3) + 
  geom_segment(aes(xend = 530, yend = value), linetype = 2, colour = 'grey') + 
  geom_point(size=2) +
  geom_text(aes(x = 500, label = key, color=profit), hjust = 0) +
  #geom_text(aes(x = 500, label = round(value, -2), color=profit), vjust = -0.30, hjust = 0) +
  scale_color_manual(values=c("red", "darkgreen", "salmon", "lightblue", "purple")) +
  transition_reveal(ID) +
  coord_cartesian(clip = 'off')

animate(animation, duration = 25, fps = 10)
```